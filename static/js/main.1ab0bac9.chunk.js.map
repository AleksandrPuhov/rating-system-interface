{"version":3,"sources":["store/constants.ts","store/types.ts","store/redusers/goodUserReduser.ts","store/redusers/badUserReduser.ts","store/redusers/userReduser.ts","store/redusers/stateUIReduser.ts","store/actions/badUserAction.ts","store/actions/stateUIActions.ts","store/actions/goodUserAction.ts","components/UserItem/UserItem.tsx","components/UserRaitingPanel/UserRaitingItem/UserGoodRaitingItem.tsx","components/UserRaitingPanel/UserRaitingItem/UserBadRaitingItem.tsx","components/UserRaitingPanel/UserRaitingPanel.tsx","store/axios-base.ts","store/actions/userActions.ts","components/UserPanel/UserPanelItem/UserPanelItem.tsx","components/UserPanel/UserPanel.tsx","components/ModalShow/ModalShow.tsx","App.tsx","store/store.ts","serviceWorker.ts","index.tsx","components/UserItem/UserItem.module.css","components/UserPanel/UserPanel.module.css","components/UserRaitingPanel/UserRaitingPanel.module.css"],"names":["TabNum","useAppDispatch","useDispatch","useAppSelector","useSelector","goodUserReduserSlice","createSlice","name","initialState","userList","reducers","addNewGoodUser","state","action","push","payload","raiting","raitingPlus","raitingMinus","deleteUserByIndex","splice","actions","goodUserList","goodUserReduser","badUserReduserSlice","addNewBadUser","badUserList","badUserReduser","userReduserSlice","page","reloadUserList","setUserListAndPage","addNewUser","userReduser","usersPage","stateUIReduserSlice","tabNum","Good","modalShowState","modalShowGood","modalUid","change","modalShow","modalHidden","selectTab","stateUIReduser","stateModalShow","typeModalShow","deleteBadUser","uid","dispatch","getState","index","findIndex","el","first_name","last_name","username","changeStateTab","num","closeModal","deleteGoodUser","UserItem","showRaiting","plusBtnHandler","minusBtnHandler","deleteBtnHandler","className","style","btnsPanel","btnPlus","shape","icon","PlusOutlined","onClick","pageNumber","btnMinus","MinusOutlined","btnDelete","size","DeleteOutlined","UserGoodRaitingItem","id","user","find","item","undefined","showAddBonusModal","plusRaitingToGoodUser","Bad","minusRaitingToGoodUser","UserBadRaitingItem","plusRaitingToBadUser","showAddBanModal","minusRaitingToBadUser","UserRaitingPanel","TabPane","Tabs","activeKeyState","goodUsers","badUsers","type","activeKey","onChange","tab","dataSource","renderItem","Item","userListItem","instance","axios","create","baseURL","getNewUsersFromAPI","a","get","response","data","Error","getUserList","map","person","console","error","reloadUsers","newList","UserPanelItem","moveUserToGoodList","moveUserToBadList","UserPanel","users","useEffect","pageNavigation","SyncOutlined","btnReload","RightOutlined","ModalShow","isModalVisible","typeModa","modalType","visible","onOk","onCancel","App","store","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.1ab0bac9.chunk.js","sourcesContent":["export enum TabNum {\n\tGood = \"1\",\n\tBad = \"2\",\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport interface User {\n\tuid: string;\n\tfirst_name: string;\n\tlast_name: string;\n\tusername: string;\n}\n\nexport interface RaitingUser extends User {\n\traiting: number;\n}\n\nexport type UserList = {\n\tuserList: User[];\n\tpage: number;\n};\n\nexport type RaitingUserList = {\n\tuserList: RaitingUser[];\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { RaitingUserList } from \"../types\";\n\nconst initialState: RaitingUserList = {\n\tuserList: [],\n};\n\nexport const goodUserReduserSlice = createSlice({\n\tname: \"goodUserReduser\",\n\tinitialState,\n\treducers: {\n\t\taddNewGoodUser: (state, action) => {\n\t\t\tstate.userList.push({ ...action.payload, raiting: 1 });\n\t\t},\n\t\traitingPlus: (state, action) => {\n\t\t\tstate.userList[action.payload].raiting++;\n\t\t},\n\t\traitingMinus: (state, action) => {\n\t\t\tstate.userList[action.payload].raiting--;\n\t\t},\n\t\tdeleteUserByIndex: (state, action) => {\n\t\t\tstate.userList.splice(action.payload, 1);\n\t\t},\n\t},\n});\n\nexport const { addNewGoodUser, raitingPlus, raitingMinus, deleteUserByIndex } =\n\tgoodUserReduserSlice.actions;\n\nexport const goodUserList = (state: RootState) =>\n\tstate.goodUserReduser.userList;\n\nexport const getGoodUserById = (id: string) => (state: RootState) => {\n\tconst userList = state.goodUserReduser.userList;\n\treturn userList.find((item) => item.uid === id);\n};\n\nexport default goodUserReduserSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { RaitingUserList } from \"../types\";\n\nconst initialState: RaitingUserList = {\n\tuserList: [],\n};\n\nexport const badUserReduserSlice = createSlice({\n\tname: \"badUserReduser\",\n\tinitialState,\n\treducers: {\n\t\taddNewBadUser: (state, action) => {\n\t\t\tstate.userList.push({ ...action.payload, raiting: -1 });\n\t\t},\n\t\traitingPlus: (state, action) => {\n\t\t\tstate.userList[action.payload].raiting++;\n\t\t},\n\t\traitingMinus: (state, action) => {\n\t\t\tstate.userList[action.payload].raiting--;\n\t\t},\n\t\tdeleteUserByIndex: (state, action) => {\n\t\t\tstate.userList.splice(action.payload, 1);\n\t\t},\n\t},\n});\n\nexport const { addNewBadUser, raitingPlus, raitingMinus, deleteUserByIndex } =\n\tbadUserReduserSlice.actions;\n\nexport const badUserList = (state: RootState) => state.badUserReduser.userList;\n\nexport const getBadUserById = (id: string) => (state: RootState) => {\n\tconst userList = state.badUserReduser.userList;\n\treturn userList.find((item) => item.uid === id);\n};\n\nexport default badUserReduserSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { UserList } from \"../types\";\n\nconst initialState: UserList = {\n\tuserList: [],\n\tpage: 1,\n};\n\nexport const userReduserSlice = createSlice({\n\tname: \"userReduser\",\n\tinitialState,\n\treducers: {\n\t\treloadUserList: (state, action) => {\n\t\t\tstate.userList = action.payload;\n\t\t\tstate.page = 1;\n\t\t},\n\t\tsetUserListAndPage: (state, action) => {\n\t\t\tstate.userList.push(...action.payload.userList);\n\t\t\tstate.page = action.payload.page;\n\t\t},\n\t\tdeleteUserByIndex: (state, action) => {\n\t\t\tstate.userList.splice(action.payload, 1);\n\t\t},\n\t\taddNewUser: (state, action) => {\n\t\t\tstate.userList.push({ ...action.payload });\n\t\t},\n\t},\n});\n\nexport const {\n\treloadUserList,\n\tsetUserListAndPage,\n\tdeleteUserByIndex,\n\taddNewUser,\n} = userReduserSlice.actions;\n\nexport const userList = (state: RootState) => state.userReduser.userList;\n\nexport const usersPage = (state: RootState) => state.userReduser.page;\n\nexport const getUserById = (id: string) => (state: RootState) => {\n\tconst userList = state.userReduser.userList;\n\treturn userList.find((item) => item.uid === id);\n};\n\nexport default userReduserSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { TabNum } from \"../constants\";\nimport { RootState } from \"../store\";\n\nexport const stateUIReduserSlice = createSlice({\n\tname: \"stateUIReduser\",\n\tinitialState: {\n\t\ttabNum: TabNum.Good,\n\t\tmodalShowState: false,\n\t\tmodalShowGood: false,\n\t\tmodalUid: \"\",\n\t},\n\treducers: {\n\t\tchange: (state, action) => {\n\t\t\tstate.tabNum = action.payload;\n\t\t},\n\t\tmodalShow: (state, action) => {\n\t\t\tstate.modalShowState = true;\n\t\t\tstate.modalShowGood = action.payload.modalShowGood;\n\t\t\tstate.modalUid = action.payload.modalUid;\n\t\t},\n\t\tmodalHidden: (state, action) => {\n\t\t\tstate.modalShowState = false;\n\t\t},\n\t},\n});\n\nexport const { change, modalShow, modalHidden } = stateUIReduserSlice.actions;\n\nexport const selectTab = (state: RootState) => state.stateUIReduser.tabNum;\n\nexport const stateModalShow = (state: RootState) =>\n\tstate.stateUIReduser.modalShowState;\n\nexport const typeModalShow = (state: RootState) =>\n\tstate.stateUIReduser.modalShowGood;\n\nexport default stateUIReduserSlice.reducer;\n","import { TabNum } from \"../constants\";\nimport {\n\tdeleteUserByIndex,\n\traitingMinus,\n\traitingPlus,\n} from \"../redusers/badUserReduser\";\nimport { addNewGoodUser } from \"../redusers/goodUserReduser\";\nimport { addNewUser } from \"../redusers/userReduser\";\nimport { AppDispatch, RootState } from \"../store\";\nimport { changeStateTab } from \"./stateUIActions\";\n\nexport const plusRaitingToBadUser =\n\t(uid: string) => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst userList = getState().badUserReduser.userList;\n\t\tconst index = userList.findIndex((el) => el.uid === uid);\n\t\tif (index >= 0) {\n\t\t\tconst raiting = userList[index].raiting;\n\n\t\t\tif (raiting === 0) {\n\t\t\t\tdispatch(addNewGoodUser(userList[index]));\n\t\t\t\tdispatch(deleteUserByIndex(index));\n\t\t\t\tdispatch(changeStateTab(TabNum.Good));\n\t\t\t} else {\n\t\t\t\tdispatch(raitingPlus(index));\n\t\t\t}\n\t\t}\n\t};\n\nexport const minusRaitingToBadUser =\n\t(uid: string) => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst userList = getState().badUserReduser.userList;\n\t\tconst index = userList.findIndex((el) => el.uid === uid);\n\t\tif (index >= 0) {\n\t\t\tdispatch(raitingMinus(index));\n\t\t}\n\t};\n\nexport const deleteBadUser =\n\t(uid: string) => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst userList = getState().badUserReduser.userList;\n\t\tconst index = userList.findIndex((el) => el.uid === uid);\n\t\tif (index >= 0) {\n\t\t\tconst { uid, first_name, last_name, username } = userList[index];\n\n\t\t\tdispatch(addNewUser({ uid, first_name, last_name, username }));\n\t\t\tdispatch(deleteUserByIndex(index));\n\t\t}\n\t};\n","import { change, modalHidden, modalShow } from \"../redusers/stateUIReduser\";\nimport { AppDispatch, RootState } from \"../store\";\nimport { deleteBadUser } from \"./badUserAction\";\nimport { deleteGoodUser } from \"./goodUserAction\";\n\nexport const changeStateTab =\n\t(num: string) => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tdispatch(change(num));\n\t};\n\nexport const closeModal =\n\t() => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tdispatch(modalHidden(true));\n\t};\n\nexport const showAddBonusModal =\n\t(uid: string) => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tdispatch(\n\t\t\tmodalShow({\n\t\t\t\tmodalShowGood: true,\n\t\t\t\tmodalUid: uid,\n\t\t\t})\n\t\t);\n\t};\n\nexport const showAddBanModal =\n\t(uid: string) => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tdispatch(\n\t\t\tmodalShow({\n\t\t\t\tmodalShowGood: false,\n\t\t\t\tmodalUid: uid,\n\t\t\t})\n\t\t);\n\t};\n\nexport const getUserInfoForModal =\n\t() => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst modalType = getState().stateUIReduser.modalShowGood;\n\t\tconst uid = getState().stateUIReduser.modalUid;\n\t\tconst userList = modalType\n\t\t\t? getState().goodUserReduser.userList\n\t\t\t: getState().badUserReduser.userList;\n\t\tconst index = userList.findIndex((el) => el.uid === uid);\n\n\t\tif (index < 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn userList[index];\n\t};\n\nexport const clickModalOK =\n\t() => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst modalType = getState().stateUIReduser.modalShowGood;\n\t\tconst uid = getState().stateUIReduser.modalUid;\n\t\tif (modalType) {\n\t\t\tdispatch(deleteGoodUser(uid));\n\t\t} else {\n\t\t\tdispatch(deleteBadUser(uid));\n\t\t}\n\t};\n","import { TabNum } from \"../constants\";\nimport { addNewBadUser } from \"../redusers/badUserReduser\";\nimport {\n\tdeleteUserByIndex,\n\traitingMinus,\n\traitingPlus,\n} from \"../redusers/goodUserReduser\";\nimport { addNewUser } from \"../redusers/userReduser\";\nimport { AppDispatch, RootState } from \"../store\";\nimport { changeStateTab } from \"./stateUIActions\";\n\nexport const plusRaitingToGoodUser =\n\t(uid: string) => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst userList = getState().goodUserReduser.userList;\n\t\tconst index = userList.findIndex((el) => el.uid === uid);\n\t\tif (index >= 0) {\n\t\t\tdispatch(raitingPlus(index));\n\t\t}\n\t};\n\nexport const minusRaitingToGoodUser =\n\t(uid: string) => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst userList = getState().goodUserReduser.userList;\n\t\tconst index = userList.findIndex((el) => el.uid === uid);\n\t\tif (index >= 0) {\n\t\t\tconst raiting = userList[index].raiting;\n\n\t\t\tif (raiting === 0) {\n\t\t\t\tdispatch(addNewBadUser(userList[index]));\n\t\t\t\tdispatch(deleteUserByIndex(index));\n\t\t\t\tdispatch(changeStateTab(TabNum.Bad));\n\t\t\t} else {\n\t\t\t\tdispatch(raitingMinus(index));\n\t\t\t}\n\t\t}\n\t};\n\nexport const deleteGoodUser =\n\t(uid: string) => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst userList = getState().goodUserReduser.userList;\n\t\tconst index = userList.findIndex((el) => el.uid === uid);\n\t\tif (index >= 0) {\n\t\t\tconst { uid, first_name, last_name, username } = userList[index];\n\n\t\t\tdispatch(addNewUser({ uid, first_name, last_name, username }));\n\t\t\tdispatch(deleteUserByIndex(index));\n\t\t}\n\t};\n","import style from \"./UserItem.module.css\";\n\nimport { DeleteOutlined, MinusOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\n\ntype UserItemType = {\n\tfirst_name: string;\n\tlast_name: string;\n\tusername: string;\n\traiting: number;\n\tshowRaiting?: boolean;\n\tplusBtnHandler: () => void;\n\tminusBtnHandler: () => void;\n\tdeleteBtnHandler?: () => void;\n};\n\nconst UserItem = ({\n\tfirst_name,\n\tlast_name,\n\tusername,\n\traiting,\n\tshowRaiting = false,\n\tplusBtnHandler,\n\tminusBtnHandler,\n\tdeleteBtnHandler,\n}: UserItemType) => {\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<p>{\"username: \" + username}</p>\n\t\t\t\t<p>{\"Name:\" + first_name + \" \" + last_name}</p>\n\t\t\t</div>\n\t\t\t<div className={style.btnsPanel}>\n\t\t\t\t<Button\n\t\t\t\t\tdata-testid=\"btnPlusTest\"\n\t\t\t\t\tclassName={style.btnPlus}\n\t\t\t\t\tshape=\"circle\"\n\t\t\t\t\ticon={<PlusOutlined />}\n\t\t\t\t\tonClick={plusBtnHandler}\n\t\t\t\t></Button>\n\t\t\t\t{showRaiting ? <p className={style.pageNumber}>{raiting}</p> : null}\n\t\t\t\t<Button\n\t\t\t\t\tdata-testid=\"btnMinusTest\"\n\t\t\t\t\tclassName={style.btnMinus}\n\t\t\t\t\tshape=\"circle\"\n\t\t\t\t\ticon={<MinusOutlined />}\n\t\t\t\t\tonClick={minusBtnHandler}\n\t\t\t\t></Button>\n\t\t\t\t{showRaiting && raiting === 0 ? (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdata-testid=\"btnDeleteTest\"\n\t\t\t\t\t\tclassName={style.btnDelete}\n\t\t\t\t\t\tshape=\"circle\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\ticon={<DeleteOutlined />}\n\t\t\t\t\t\tonClick={deleteBtnHandler}\n\t\t\t\t\t></Button>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default UserItem;\n","import {\n\tdeleteGoodUser,\n\tminusRaitingToGoodUser,\n\tplusRaitingToGoodUser,\n} from \"../../../store/actions/goodUserAction\";\nimport { showAddBonusModal } from \"../../../store/actions/stateUIActions\";\nimport { getGoodUserById } from \"../../../store/redusers/goodUserReduser\";\nimport { useAppDispatch, useAppSelector } from \"../../../store/types\";\nimport UserItem from \"../../UserItem/UserItem\";\n\nconst UserGoodRaitingItem = ({ uid }: { uid: string }) => {\n\tconst user = useAppSelector(getGoodUserById(uid));\n\n\tconst dispatch = useAppDispatch();\n\n\tconst plusBtnHandler = () => {\n\t\tif (user !== undefined) {\n\t\t\tif (user.raiting >= 5) {\n\t\t\t\tdispatch(showAddBonusModal(uid));\n\t\t\t} else {\n\t\t\t\tdispatch(plusRaitingToGoodUser(uid));\n\t\t\t}\n\t\t}\n\t};\n\tconst minusBtnHandler = () => {\n\t\tif (user !== undefined) {\n\t\t\tdispatch(minusRaitingToGoodUser(uid));\n\t\t}\n\t};\n\n\tconst deleteBtnHandler = () => {\n\t\tdispatch(deleteGoodUser(uid));\n\t};\n\n\treturn user === undefined ? null : (\n\t\t<UserItem\n\t\t\tfirst_name={user.first_name}\n\t\t\tlast_name={user.last_name}\n\t\t\tusername={user.username}\n\t\t\traiting={user.raiting}\n\t\t\tshowRaiting={true}\n\t\t\tplusBtnHandler={() => plusBtnHandler()}\n\t\t\tminusBtnHandler={() => minusBtnHandler()}\n\t\t\tdeleteBtnHandler={() => deleteBtnHandler()}\n\t\t/>\n\t);\n};\n\nexport default UserGoodRaitingItem;\n","import {\n\tdeleteBadUser,\n\tminusRaitingToBadUser,\n\tplusRaitingToBadUser,\n} from \"../../../store/actions/badUserAction\";\nimport { showAddBanModal } from \"../../../store/actions/stateUIActions\";\nimport { getBadUserById } from \"../../../store/redusers/badUserReduser\";\nimport { useAppDispatch, useAppSelector } from \"../../../store/types\";\nimport UserItem from \"../../UserItem/UserItem\";\n\nconst UserBadRaitingItem = ({ uid }: { uid: string }) => {\n\tconst dispatch = useAppDispatch();\n\n\tconst user = useAppSelector(getBadUserById(uid));\n\n\tconst plusBtnHandler = () => {\n\t\tif (user !== undefined) {\n\t\t\tdispatch(plusRaitingToBadUser(uid));\n\t\t}\n\t};\n\tconst minusBtnHandler = () => {\n\t\tif (user !== undefined) {\n\t\t\tif (user.raiting <= -5) {\n\t\t\t\tdispatch(showAddBanModal(uid));\n\t\t\t} else {\n\t\t\t\tdispatch(minusRaitingToBadUser(uid));\n\t\t\t}\n\t\t}\n\t};\n\tconst deleteBtnHandler = () => {\n\t\tdispatch(deleteBadUser(uid));\n\t};\n\n\treturn user === undefined ? null : (\n\t\t<UserItem\n\t\t\tfirst_name={user.first_name}\n\t\t\tlast_name={user.last_name}\n\t\t\tusername={user.username}\n\t\t\traiting={user.raiting}\n\t\t\tshowRaiting={true}\n\t\t\tplusBtnHandler={() => plusBtnHandler()}\n\t\t\tminusBtnHandler={() => minusBtnHandler()}\n\t\t\tdeleteBtnHandler={() => deleteBtnHandler()}\n\t\t/>\n\t);\n};\n\nexport default UserBadRaitingItem;\n","import { List, Tabs } from \"antd\";\nimport { useAppDispatch, useAppSelector } from \"../../store/types\";\nimport { goodUserList } from \"../../store/redusers/goodUserReduser\";\nimport { badUserList } from \"../../store/redusers/badUserReduser\";\nimport UserGoodRaitingItem from \"./UserRaitingItem/UserGoodRaitingItem\";\nimport UserBadRaitingItem from \"./UserRaitingItem/UserBadRaitingItem\";\nimport { selectTab } from \"../../store/redusers/stateUIReduser\";\nimport { changeStateTab } from \"../../store/actions/stateUIActions\";\nimport { TabNum } from \"../../store/constants\";\n\nimport style from \"./UserRaitingPanel.module.css\";\n\nconst UserRaitingPanel = () => {\n\tconst { TabPane } = Tabs;\n\n\tconst activeKeyState = useAppSelector(selectTab);\n\tconst goodUsers = useAppSelector(goodUserList);\n\tconst badUsers = useAppSelector(badUserList);\n\n\tconst dispatch = useAppDispatch();\n\n\tconst onChangeTab = (activeKey: string) => {\n\t\tdispatch(changeStateTab(activeKey));\n\t};\n\n\treturn (\n\t\t<Tabs type=\"card\" activeKey={activeKeyState} onChange={onChangeTab}>\n\t\t\t<TabPane tab=\"Good Raiting Users\" key={TabNum.Good}>\n\t\t\t\t<div className={style.userList}>\n\t\t\t\t\t<List\n\t\t\t\t\t\tdataSource={goodUsers}\n\t\t\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t\t\t<List.Item key={item.uid} className={style.userListItem}>\n\t\t\t\t\t\t\t\t<UserGoodRaitingItem uid={item.uid} />\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t)}\n\t\t\t\t\t></List>\n\t\t\t\t</div>\n\t\t\t</TabPane>\n\t\t\t<TabPane tab=\"Bad Raiting Users\" key={TabNum.Bad}>\n\t\t\t\t<div className={style.userList}>\n\t\t\t\t\t<List\n\t\t\t\t\t\tdataSource={badUsers}\n\t\t\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t\t\t<List.Item key={item.uid} className={style.userListItem}>\n\t\t\t\t\t\t\t\t<UserBadRaitingItem uid={item.uid} />\n\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t)}\n\t\t\t\t\t></List>\n\t\t\t\t</div>\n\t\t\t</TabPane>\n\t\t</Tabs>\n\t);\n};\n\nexport default UserRaitingPanel;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n\tbaseURL: \"https://random-data-api.com/api/\",\n});\n\nexport default instance;\n","import { AppDispatch, RootState } from \"../store\";\n\nimport axios from \"../axios-base\";\n\nimport {\n\tdeleteUserByIndex,\n\treloadUserList,\n\tsetUserListAndPage,\n} from \"../redusers/userReduser\";\nimport { addNewGoodUser } from \"../redusers/goodUserReduser\";\nimport { addNewBadUser } from \"../redusers/badUserReduser\";\n\n//'https://random-data-api.com/api/users/random_user?size=3'\n\nexport const getNewUsersFromAPI = async (page: number) => {\n\ttry {\n\t\tconst response = await axios.get(\"users/random_user?size=3&page=\" + page);\n\n\t\tif (!response.data) throw new Error(\"No data from random-data-api\");\n\n\t\tconst getUserList = response.data as Array<any>;\n\n\t\tconst userList = getUserList.map((person: any) => {\n\t\t\treturn {\n\t\t\t\tuid: person.uid,\n\t\t\t\tfirst_name: person.first_name,\n\t\t\t\tlast_name: person.last_name,\n\t\t\t\tusername: person.username,\n\t\t\t};\n\t\t});\n\t\treturn userList;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\nexport const reloadUsers =\n\t() => async (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst newList = await getNewUsersFromAPI(1);\n\t\tdispatch(reloadUserList(newList));\n\t};\n\nexport const getNexPage =\n\t() => async (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst page = getState().userReduser.page;\n\t\tconst newList = await getNewUsersFromAPI(page + 1);\n\t\tdispatch(setUserListAndPage({ userList: newList, page: page + 1 }));\n\t};\n\nexport const moveUserToGoodList =\n\t(uid: string) => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst userList = getState().userReduser.userList;\n\t\tconst index = userList.findIndex((el) => el.uid === uid);\n\n\t\tif (index >= 0) {\n\t\t\tdispatch(addNewGoodUser(userList[index]));\n\t\t\tdispatch(deleteUserByIndex(index));\n\t\t}\n\t};\n\nexport const moveUserToBadList =\n\t(uid: string) => (dispatch: AppDispatch, getState: () => RootState) => {\n\t\tconst userList = getState().userReduser.userList;\n\t\tconst index = userList.findIndex((el) => el.uid === uid);\n\n\t\tif (index >= 0) {\n\t\t\tdispatch(addNewBadUser(userList[index]));\n\t\t\tdispatch(deleteUserByIndex(index));\n\t\t}\n\t};\n","import { changeStateTab } from \"../../../store/actions/stateUIActions\";\nimport {\n\tmoveUserToBadList,\n\tmoveUserToGoodList,\n} from \"../../../store/actions/userActions\";\nimport { TabNum } from \"../../../store/constants\";\nimport { getUserById } from \"../../../store/redusers/userReduser\";\nimport { useAppDispatch, useAppSelector } from \"../../../store/types\";\nimport UserItem from \"../../UserItem/UserItem\";\n\nconst UserPanelItem = ({ uid }: { uid: string }) => {\n\tconst dispatch = useAppDispatch();\n\tconst user = useAppSelector(getUserById(uid));\n\n\tconst plusBtnHandler = () => {\n\t\tif (user !== undefined) {\n\t\t\tdispatch(moveUserToGoodList(uid));\n\t\t\tdispatch(changeStateTab(TabNum.Good));\n\t\t}\n\t};\n\tconst minusBtnHandler = () => {\n\t\tif (user !== undefined) {\n\t\t\tdispatch(moveUserToBadList(uid));\n\t\t\tdispatch(changeStateTab(TabNum.Bad));\n\t\t}\n\t};\n\n\treturn user === undefined ? null : (\n\t\t<UserItem\n\t\t\tfirst_name={user.first_name}\n\t\t\tlast_name={user.last_name}\n\t\t\tusername={user.username}\n\t\t\traiting={0}\n\t\t\t//showRaiting={true}\n\t\t\tplusBtnHandler={() => plusBtnHandler()}\n\t\t\tminusBtnHandler={() => minusBtnHandler()}\n\t\t/>\n\t);\n};\n\nexport default UserPanelItem;\n","import style from \"./UserPanel.module.css\";\n\nimport { Button, List } from \"antd\";\nimport { RightOutlined, SyncOutlined } from \"@ant-design/icons\";\nimport { userList, usersPage } from \"../../store/redusers/userReduser\";\nimport { useAppDispatch, useAppSelector } from \"../../store/types\";\nimport { getNexPage, reloadUsers } from \"../../store/actions/userActions\";\nimport { useEffect } from \"react\";\nimport UserPanelItem from \"./UserPanelItem/UserPanelItem\";\n\nconst UserPanel = () => {\n\tconst dispatch = useAppDispatch();\n\n\tconst users = useAppSelector(userList);\n\tconst page = useAppSelector(usersPage);\n\n\tuseEffect(() => {\n\t\tdispatch(reloadUsers());\n\t}, []);\n\n\tconst getNewUsersBtnHandler = () => {\n\t\tdispatch(reloadUsers());\n\t};\n\n\tconst nextBtnHandler = () => {\n\t\tdispatch(getNexPage());\n\t};\n\n\treturn (\n\t\t<div className={style.UserPanel}>\n\t\t\t<div className={style.pageNavigation}>\n\t\t\t\t<Button\n\t\t\t\t\tdata-testid=\"btnNewTest\"\n\t\t\t\t\tshape=\"circle\"\n\t\t\t\t\ticon={<SyncOutlined />}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tclassName={style.btnReload}\n\t\t\t\t\tonClick={getNewUsersBtnHandler}\n\t\t\t\t/>\n\t\t\t\t<p className={style.pageNumber}>{page}</p>\n\t\t\t\t<Button\n\t\t\t\t\tdata-testid=\"btnNextTest\"\n\t\t\t\t\tshape=\"circle\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\ticon={<RightOutlined />}\n\t\t\t\t\tonClick={nextBtnHandler}\n\t\t\t\t></Button>\n\t\t\t</div>\n\t\t\t<div className={style.userList}>\n\t\t\t\t<List\n\t\t\t\t\tdataSource={users}\n\t\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t\t<List.Item key={item.uid}>\n\t\t\t\t\t\t\t<UserPanelItem uid={item.uid} />\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t)}\n\t\t\t\t></List>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default UserPanel;\n","import { Modal } from \"antd\";\nimport {\n\tclickModalOK,\n\tcloseModal,\n\tgetUserInfoForModal,\n} from \"../../store/actions/stateUIActions\";\nimport {\n\tstateModalShow,\n\ttypeModalShow,\n} from \"../../store/redusers/stateUIReduser\";\nimport { useAppDispatch, useAppSelector } from \"../../store/types\";\n\nconst ModalShow = () => {\n\tconst dispatch = useAppDispatch();\n\n\tconst isModalVisible = useAppSelector(stateModalShow);\n\tconst typeModa = useAppSelector(typeModalShow);\n\n\tconst user = dispatch(getUserInfoForModal());\n\n\tconst handleOk = () => {\n\t\tdispatch(clickModalOK());\n\t\tdispatch(closeModal());\n\t};\n\n\tconst handleCancel = () => {\n\t\tdispatch(closeModal());\n\t};\n\n\treturn (\n\t\t<Modal visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n\t\t\t{user === null ? null : typeModa ? (\n\t\t\t\t<p>Нужно вознаградить {user.username}. Сделать это?</p>\n\t\t\t) : (\n\t\t\t\t<p>Пора забанить {user.username}. Сделать это?</p>\n\t\t\t)}\n\t\t</Modal>\n\t);\n};\n\nexport default ModalShow;\n","import \"./App.css\";\n\nimport { Card } from \"antd\";\nimport UserRaitingPanel from \"./components/UserRaitingPanel/UserRaitingPanel\";\nimport UserPanel from \"./components/UserPanel/UserPanel\";\nimport ModalShow from \"./components/ModalShow/ModalShow\";\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Card className=\"App-left\">\n\t\t\t\t<UserPanel />\n\t\t\t</Card>\n\t\t\t<Card className=\"App-right\">\n\t\t\t\t<UserRaitingPanel />\n\t\t\t</Card>\n\t\t\t<ModalShow />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport badUserReduser from \"./redusers/badUserReduser\";\nimport goodUserReduser from \"./redusers/goodUserReduser\";\nimport stateUIReduser from \"./redusers/stateUIReduser\";\nimport userReduser from \"./redusers/userReduser\";\n\nexport const store = configureStore({\n\treducer: {\n\t\tgoodUserReduser,\n\t\tbadUserReduser,\n\t\tuserReduser,\n\t\tstateUIReduser,\n\t},\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n\tReturnType,\n\tRootState,\n\tunknown,\n\tAction<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnsPanel\":\"UserItem_btnsPanel__3G820\",\"pageNumber\":\"UserItem_pageNumber__3ceqC\",\"btnPlus\":\"UserItem_btnPlus__3pzaB\",\"btnMinus\":\"UserItem_btnMinus__EuJLf\",\"btnDelete\":\"UserItem_btnDelete__3tWQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserPanel\":\"UserPanel_UserPanel__18xWq\",\"btnReload\":\"UserPanel_btnReload__1XaFW\",\"pageNavigation\":\"UserPanel_pageNavigation__GjQ5o\",\"pageNumber\":\"UserPanel_pageNumber__AiU8d\",\"userList\":\"UserPanel_userList__1NW6H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userList\":\"UserRaitingPanel_userList__2a-iM\"};"],"sourceRoot":""}